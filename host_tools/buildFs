#!/bin/sh

cd $1

echo "mknod ..."

mknod	dev/console	c	4	64
mknod	dev/flash0	c	200	0

if [ "$4" = "realtek" ]; then
mknod	dev/adsl0   c	100	0
elif [ "$4" = "broadcom" ]; then
if echo $DF_FLAGS | grep -q "INCLUDE_FASTPATH"; then
mknod   dev/pppox_iptables c 220 0
fi
mknod	dev/brcmboard   c 206 0
mknod	dev/bcmadsl0    c 208 0
if echo $DF_FLAGS | grep -q "INCLUDE_VOIP"; then
mknod	dev/bcmendpoint0 c 209 0
mknod	dev/voip	c 215 0
mknod	dev/pcmshim0 	c 217 0
mknod	dev/ac97	c 222 0
mknod	dev/slac	c 223 0
mknod	dev/bcmprof	c 224 0
mknod	dev/si3215	c 225 0
fi
mknod	dev/bcmxtmcfg0	c 228 0
mknod	dev/bcmvlan     c 238 0
mknod   dev/pwrmngt     c 240 0	
mknod   dev/bcmfap      c 241 0
mknod   dev/fcache      c 242 0
mknod   dev/ingqos      c 243 0
mknod   dev/bpm         c 244 0
mknod   dev/bcmarl      c 245 0	
mknod   dev/gmac        c 249 0
if echo $DF_FLAGS | grep -q "INCLUDE_OAM"; then
mknod   dev/tms         c 250 0
fi
elif [ "$4" = "mtk" ]; then
mknod 	dev/AclDsp	c 	234	0
mknod 	dev/FxsDrv	c 	235 	0
mknod   dev/vdsp        c       245     0
mknod   dev/slic        c       251     0
mknod	dev/voip	c	215	0

mknod	dev/voip      	c	215	0
mknod	dev/vpe1	c	254	1
mknod	dev/vmmc11	c	183	11
mknod	dev/vmmc12	c	183	12
mknod	dev/vmmc13	c	183	13
mknod	dev/vmmc14	c	183	14
mknod	dev/vmmc15	c	183	15
mknod	dev/vmmc16	c	183	16
mknod	dev/vmmc17	c	183	17
mknod	dev/vmmc18	c	183	18
mknod	dev/vmmc10	c	183	10

mknod	dev/pb		c	150	0
mknod	dev/dect_drv	c	213	0
mknod	dev/timer_drv	c	212	0

mknod   dev/voip_timer_driver  c       229     0  
mknod 	dev/tcledctrl	c 	206 0
if [ $5 == "voip" ]; then
mknod 	dev/AclDsp	c 	234	0
mknod 	dev/FxsDrv	c 	35 	0
mknod   dev/spi		c	255	0
mknod   dev/vdsp        c       245     0
mknod   dev/slic        c       251     0

mknod	dev/tdicmd	c	214	0
fi

mknod	dev/qdma_lan	c	119	0
mknod	dev/qdma_wan	c	120	0
mknod	dev/hwnat0	c	220	0
mknod	dev/dsl_cpe_api/0	c	109	0
mknod	dev/mei_cpe/0		c	249	0 
mknod   dev/ifx_dsl     c       106     0
mknod   dev/ifx_mei     c       105     0
mknod   dev/ifx_ppa     c       181     0
mknod   dev/switch_api/0 c 81 0
mknod   dev/switch_api/1 c 81 1
mknod	dev/exin0	c	244	0
mknod	dev/exin1	c	244	1
mknod	dev/exin2	c	244	2
mknod	dev/exin3	c	244	3
mknod	dev/exin4	c	244	4
mknod	dev/exin5	c	244	5

fi

mknod	dev/gpio	c	10	123
mknod	dev/gpio1	c	252	0
mknod	dev/led		c	10	151
mknod 	dev/random  c	1	8

mknod   dev/mtd		b	31 	0
mknod   dev/mtd0	c	90 	0
mknod   dev/mtd1	c	90 	2
mknod   dev/mtd2	c	90 	4
mknod   dev/mtd3	c	90 	6
mknod   dev/mtd4	c	90 	8
mknod   dev/mtd5	c	90 	10
if [ "$4" = "mtk" ]; then
mknod	dev/mtd6	c	90	12
fi
mknod   dev/mtdblock0	b	31 	0
mknod   dev/mtdblock1	b	31 	1
mknod   dev/mtdblock2	b	31 	2
mknod   dev/mtdblock3	b	31 	3
mknod   dev/mtdblock4	b	31 	4
mknod   dev/mtdblock5	b	31 	5
if [ "$4" = "mtk" ]; then
mknod	dev/mtdblock6	b	31	6
fi
mknod	dev/null	c	1	3
mknod	dev/ppp		c	108	0
mknod	dev/ptmx	c	5	2
mknod	dev/printer0	c	180 	0
mknod	dev/ptm         c       191     0

mknod	dev/ptyp0	c	2	0
mknod	dev/ptyp1	c	2	1
mknod	dev/ptyp2	c	2	2

mknod	dev/tty		c	5	0
mknod	dev/tty0	c	4	0
mknod	dev/ttyS0	c	4	64
mknod	dev/ttyS1	c	4	65
mknod	dev/ttyp0	c	3	0
mknod	dev/ttyp1	c	3	1
mknod	dev/ttyp2	c	3	2

mknod	dev/urandom	c	1	9
mknod	dev/watchdog	c	10	130
mknod	dev/zero	c	1	5

mknod	dev/dk0		c	63	0
mknod	dev/caldata	b	31	5

mknod	dev/net/tun	c	10	200

mknod 	dev/sda 	b 	8 	0
mknod 	dev/sda1 	b 	8 	1
mknod 	dev/sda2 	b 	8 	2
mknod 	dev/sdb 	b 	8 	16
mknod 	dev/sdb1 	b 	8 	17
mknod 	dev/sdb2 	b 	8 	18

mknod 	dev/pmap 	c 	200	0
mknod 	dev/qostype	c 	111	2

#mknod 	dev/fuse	c 	10 	229	
#mknod 	dev/misc/fuse	c 	10 	229	

mknod 	dev/ttyUSB0	c 	188	0
mknod 	dev/ttyUSB1 	c 	188	1
mknod 	dev/ttyUSB2 	c 	188	2
mknod 	dev/ttyUSB3 	c 	188	3
mknod 	dev/ttyUSB4 	c 	188 4
mknod 	dev/ttyUSB5 	c 	188 5	
mknod 	dev/ttyUSB6 	c 	188 6
mknod 	dev/ttyUSB7 	c 	188 7
mknod 	dev/ttyUSB8 	c 	188 8
mknod 	dev/ttyUSB9 	c 	188 9
mknod 	dev/ttyUSB10 	c 	188 10
mknod 	dev/ttyUSB11 	c 	188 11
mknod 	dev/ttyUSB12 	c 	188 12
mknod 	dev/ttyUSB13 	c 	188 13
mknod 	dev/ttyUSB14 	c 	188 14
mknod 	dev/ttyUSB15 	c 	188 15

mknod 	dev/ttyACM0 	c 	166 0
mknod 	dev/ttyACM1 	c 	166 1
mknod 	dev/ttyACM2 	c 	166 2
mknod 	dev/ttyACM3 	c 	166 3
mknod 	dev/ttyACM4 	c 	166 4
mknod 	dev/ttyACM5 	c 	166 5
mknod 	dev/ttyACM6 	c 	166 6
mknod 	dev/ttyACM7 	c 	166 7
mknod 	dev/ttyACM8 	c 	166 8
mknod 	dev/ttyACM9 	c 	166 9
mknod 	dev/ttyACM10 	c 	166 10
mknod 	dev/ttyACM11 	c 	166 11
mknod 	dev/ttyACM12 	c 	166 12
mknod 	dev/ttyACM13 	c 	166 13
mknod 	dev/ttyACM14 	c 	166 14
mknod 	dev/ttyACM15 	c 	166 15


echo "building FS ..."

if [ "$4" = "ralink" ]
	then $2 . ../rootfs.$3 -be -noappend
elif [ "$4" = "realtek" ]
	then $2 . ../rootfs.$3 -comp lzma -noappend
elif [ "$4" = "lantiq" ]
	then $2 . ../rootfs.$3 -nopad -noappend -root-owned -comp lzma -processors 1
elif [ "$4" = "mtk" ]
#	then $2 . ../rootfs.$3 -comp lzma -nopad -noappend
	then $2 . ../rootfs.$3 -comp lzma -noappend
elif [ "$4" = "broadcom" ]; then
	if echo $2 | egrep -q "mksquashfs" > /dev/null ; then 
		if [ $(sed -n 's/^BRCM_RELEASE=\([0-9]*\).*$/\1/p' ${BUILD_DIR}/version.make) = 12 ]; then 
			# SDK version is 4.12L.08
			$2 . ../rootfs.$3 -be -noappend -all-root $BRCM_ENDIAN_FLAGS 65536
		else
			# SDK version is 4.16L.01
			$2 . $1/../rootfs.$3 -noappend -all-root $BRCM_ENDIAN_FLAGS 65536 -comp xz
		fi
	elif echo $2 | egrep -q "mkfs.jffs2" > /dev/null ; then 
		cp $KERNEL_DIR/vmlinux $1/../
		$STRIP --remove-section=.note --remove-section=.comment $1/../vmlinux
		$OBJCOPY -O binary $1/../vmlinux $1/../vmlinux.bin
		if egrep "BUILD_NOR_KERNEL_LZ4=y" $BUILD_DIR/tp/${PROFILE}_${MODEL} > /dev/null; then
			cmplzma -k -2 -lz4 $1/../vmlinux $1/../vmlinux.bin $1/../vmlinux.lz4
		elif egrep "BUILD_NOR_KERNEL_LZMA=y" $BUILD_DIR/tp/${PROFILE}_${MODEL} > /dev/null; then
			cmplzma -k -2 -lzma $1/../vmlinux $1/../vmlinux.bin $1/../vmlinux.lz
		else
			cmplzma -k -2 $1/../vmlinux $1/../vmlinux.bin $1/../vmlinux.lz
		fi
		cp ${BOOT_TG_PATH}/cfe${BRCM_CHIP}ram.bin $1/cferam.000
		if egrep "BUILD_NOR_KERNEL_LZ4=y" $BUILD_DIR/tp/${PROFILE}_${MODEL} > /dev/null; then
			cp $1/../vmlinux.lz4 $1/.
		else
			cp $1/../vmlinux.lz $1/.
		fi
		echo -e "/cferam.000" > $HOSTTOOLS_DIR/nocomprlist
		if egrep "BUILD_NOR_KERNEL_LZ4=y" $BUILD_DIR/tp/${PROFILE}_${MODEL} > /dev/null; then
			echo -e "/vmlinux.lz4" >> $HOSTTOOLS_DIR/nocomprlist
		else
			echo -e "/vmlinux.lz" >> $HOSTTOOLS_DIR/nocomprlist
		fi
		echo -e "/etc/tag_kernel" >> $HOSTTOOLS_DIR/nocomprlist

		if ! egrep "CONFIG_UBIFS_FS=y" ${KERNELPATH}/${CONFIG_MODEL}_config > /dev/null; then
			# generate JFFS2 image
			if [ "x$LARGE_NAND_FLASH" = "xy" ]; then
				mkdir $1/large_data
				chmod +w $1/etc/fstab
				echo -e "mtd:large_data /large_data jffs2 rw 0 0" >> $1/etc/fstab
			fi
			$2 $BRCM_ENDIAN_FLAGS -p -n -e 131072 -r $1 -o $1/../rootfs.$3 -N $HOSTTOOLS_DIR/nocomprlist
		else
			# generate UBIFS image	
			rm -fr $1/../bootfs
			mkdir $1/../bootfs
			chmod 777 $1/../bootfs
			mv $1/cferam.000 $1/../bootfs
			if egrep "BUILD_NOR_KERNEL_LZ4=y" $BUILD_DIR/tp/${PROFILE}_${MODEL} > /dev/null; then
				mv $1/vmlinux.lz4 $1/../bootfs
			else
				mv $1/vmlinux.lz $1/../bootfs
			fi
			mv $1/etc/tag_kernel $1/../bootfs
			ln -s /bootfs/tag_kernel $1/etc/tag_kernel
			mkdir $1/bootfs
			mkdir $1/data
			chmod +w $1/etc/fstab
			if [ "x$LARGE_NAND_FLASH" = "xy" ]; then
				mkdir $1/large_data
				echo -e "mtd:large_data /large_data jffs2 rw 0 0" >> $1/etc/fstab
			fi
			echo -e "mtd:bootfs /bootfs jffs2 ro 0 0" >> $1/etc/fstab
			echo -e "mtd:data /data jffs2 rw 0 0" >> $1/etc/fstab
			chmod -w $1/etc/fstab
			echo -e "[ubifs]"                 > $HOSTTOOLS_DIR/ubi.ini
			echo -e "mode=ubi"               >> $HOSTTOOLS_DIR/ubi.ini
			echo -e "image=$1/../rootfs.ubifs" >> $HOSTTOOLS_DIR/ubi.ini
			echo -e "vol_id=0"               >> $HOSTTOOLS_DIR/ubi.ini
			echo -e "vol_type=dynamic"       >> $HOSTTOOLS_DIR/ubi.ini
			echo -e "vol_name=rootfs_ubifs"  >> $HOSTTOOLS_DIR/ubi.ini
			echo -e "vol_flags=autoresize"   >> $HOSTTOOLS_DIR/ubi.ini

			sed -i "/tag_kernel/d"  $HOSTTOOLS_DIR/nocomprlist
			echo -e "/tag_kernel" >> $HOSTTOOLS_DIR/nocomprlist

			$2 $BRCM_ENDIAN_FLAGS -p -n -e 131072 -r $1/../bootfs -o $1/../bootfs128kb.img -N $HOSTTOOLS_DIR/nocomprlist
			if [ "$BRCM_CHIP" = "68500" ]; then
				$HOSTTOOLS_DIR/mtd-utils*/mkfs.ubifs/mkfs.ubifs  -v -c 2048 -m 2048 -e 129024 -x zlib -r $1 -o $1/../rootfs.ubifs
				$HOSTTOOLS_DIR/mtd-utils*/ubi-utils/ubinize -v -o $1/../ubi_rootfs128kb.img -m 2048 -s 512 -p 131072 $HOSTTOOLS_DIR/ubi.ini
			else
				$HOSTTOOLS_DIR/mtd-utils*/mkfs.ubifs/mkfs.ubifs  -v -c 2048 -m 2048 -e 126976 -x zlib -r $1 -o $1/../rootfs.ubifs
				$HOSTTOOLS_DIR/mtd-utils*/ubi-utils/ubinize -v -o $1/../ubi_rootfs128kb.img -m 2048 -p 131072 $HOSTTOOLS_DIR/ubi.ini
			fi
			rm $1/../rootfs.ubifs
			rm $HOSTTOOLS_DIR/ubi.ini
			
			$HOSTTOOLS_DIR/scripts/bcmImageMaker --cferom ${BOOT_TG_PATH}/boot.bin --blocksize 131072 --bootofs 0 --bootsize 131072 --ubifs --bootfs $1/../bootfs128kb.img --rootfs $1/../ubi_rootfs128kb.img --fsonly $1/../rootfs.$3
		fi
		rm $HOSTTOOLS_DIR/nocomprlist
	else
		echo "Unsupported fs"
	fi
else
	echo "Wrong supplier"
fi
